{"version":3,"file":"reveal.js","sources":["../js/utils/util.js","../js/utils/device.js","../node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/controllers/slidenumber.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/utils/constants.js","../js/controllers/autoanimate.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/print.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}\n\nconst fileExtensionToMimeMap = {\n\t'mp4': 'video/mp4',\n\t'm4a': 'video/mp4',\n\t'ogv': 'video/ogg',\n\t'mpeg': 'video/mpeg',\n\t'webm': 'video/webm'\n}\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = ( filename='' ) => {\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\n}","const UA = navigator.userAgent;\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );","/**\n * fitty v2.3.6 - Snugly resizes text to fit its parent container\n * Copyright (c) 2022 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n\nvar e=function(e){if(e){var t=function(e){return[].slice.call(e)},n=0,i=1,r=2,o=3,a=[],l=null,u=\"requestAnimationFrame\"in e?function(){e.cancelAnimationFrame(l),l=e.requestAnimationFrame((function(){return s(a.filter((function(e){return e.dirty&&e.active})))}))}:function(){},c=function(e){return function(){a.forEach((function(t){return t.dirty=e})),u()}},s=function(e){e.filter((function(e){return!e.styleComputed})).forEach((function(e){e.styleComputed=m(e)})),e.filter(y).forEach(v);var t=e.filter(p);t.forEach(d),t.forEach((function(e){v(e),f(e)})),t.forEach(S)},f=function(e){return e.dirty=n},d=function(e){e.availableWidth=e.element.parentNode.clientWidth,e.currentWidth=e.element.scrollWidth,e.previousFontSize=e.currentFontSize,e.currentFontSize=Math.min(Math.max(e.minSize,e.availableWidth/e.currentWidth*e.previousFontSize),e.maxSize),e.whiteSpace=e.multiLine&&e.currentFontSize===e.minSize?\"normal\":\"nowrap\"},p=function(e){return e.dirty!==r||e.dirty===r&&e.element.parentNode.clientWidth!==e.availableWidth},m=function(t){var n=e.getComputedStyle(t.element,null);return t.currentFontSize=parseFloat(n.getPropertyValue(\"font-size\")),t.display=n.getPropertyValue(\"display\"),t.whiteSpace=n.getPropertyValue(\"white-space\"),!0},y=function(e){var t=!1;return!e.preStyleTestCompleted&&(/inline-/.test(e.display)||(t=!0,e.display=\"inline-block\"),\"nowrap\"!==e.whiteSpace&&(t=!0,e.whiteSpace=\"nowrap\"),e.preStyleTestCompleted=!0,t)},v=function(e){e.element.style.whiteSpace=e.whiteSpace,e.element.style.display=e.display,e.element.style.fontSize=e.currentFontSize+\"px\"},S=function(e){e.element.dispatchEvent(new CustomEvent(\"fit\",{detail:{oldValue:e.previousFontSize,newValue:e.currentFontSize,scaleFactor:e.currentFontSize/e.previousFontSize}}))},h=function(e,t){return function(){e.dirty=t,e.active&&u()}},w=function(e){return function(){a=a.filter((function(t){return t.element!==e.element})),e.observeMutations&&e.observer.disconnect(),e.element.style.whiteSpace=e.originalStyle.whiteSpace,e.element.style.display=e.originalStyle.display,e.element.style.fontSize=e.originalStyle.fontSize}},b=function(e){return function(){e.active||(e.active=!0,u())}},z=function(e){return function(){return e.active=!1}},F=function(e){e.observeMutations&&(e.observer=new MutationObserver(h(e,i)),e.observer.observe(e.element,e.observeMutations))},g={minSize:16,maxSize:512,multiLine:!0,observeMutations:\"MutationObserver\"in e&&{subtree:!0,childList:!0,characterData:!0}},W=null,E=function(){e.clearTimeout(W),W=e.setTimeout(c(r),x.observeWindowDelay)},M=[\"resize\",\"orientationchange\"];return Object.defineProperty(x,\"observeWindow\",{set:function(t){var n=\"\".concat(t?\"add\":\"remove\",\"EventListener\");M.forEach((function(t){e[n](t,E)}))}}),x.observeWindow=!0,x.observeWindowDelay=100,x.fitAll=c(o),x}function C(e,t){var n=Object.assign({},g,t),i=e.map((function(e){var t=Object.assign({},n,{element:e,active:!0});return function(e){e.originalStyle={whiteSpace:e.element.style.whiteSpace,display:e.element.style.display,fontSize:e.element.style.fontSize},F(e),e.newbie=!0,e.dirty=!0,a.push(e)}(t),{element:e,fit:h(t,o),unfreeze:b(t),freeze:z(t),unsubscribe:w(t)}}));return u(),i}function x(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return\"string\"==typeof e?C(t(document.querySelectorAll(e)),n):C([e],n)[0]}}(\"undefined\"==typeof window?null:window);export default e;\n","import { extend, queryAll, closest, getMimeTypeFromFile } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\n\t\t\t\t\t\t\treturn `url(${encodeURI(background.trim())})`;\n\t\t\t\t\t\t}).join( ',' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\n\t\t\t\t\t\tif( type ) {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\" type=\"${type}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the scope.\n\t */\n\tlayout( scopeElement ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( scopeElement.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Normal iframes\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t} );\n\n\t\t\t// Lazy loading iframes\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\tevent.target.currentTime = 0;\n\t\t\tevent.target.play();\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintingPDF() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = 'h.v';\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = 'c';\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase 'c':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c/t':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === 'h/v' ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.slice( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.slice( 2, 4 ), 16 ),\n\t\t\tb: parseInt( hex6.slice( 4, 6 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}","import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundGradient: slide.getAttribute( 'data-background-gradient' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.backgroundSize = '';\n\t\tcontentElement.style.backgroundRepeat = '';\n\t\tcontentElement.style.backgroundPosition = '';\n\t\tcontentElement.style.backgroundImage = '';\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundGradient || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundGradient +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundGradient ) element.style.backgroundImage = data.backgroundGradient;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = data.backgroundColor;\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\tslide.classList.add( 'has-dark-background' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.classList.add( 'has-light-background' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tif( v < indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\t\tif( currentSlide.classList.contains( classToBubble ) ) {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.add( classToBubble );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.remove( classToBubble );\n\t\t\t\t}\n\t\t\t}, this );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}\n","\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\n\t\t// physically latter slide (independent of slide direction)\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// If the from-slide is hidden because it has moved outside\n\t\t\t// the view distance, we need to temporarily show it while\n\t\t\t// measuring\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === 'none';\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = this.Reveal.getConfig().display;\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = 'none';\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\t// Maintain fragment visibility for matching elements when\n\t\t// we're navigating forwards, this way the viewer won't need\n\t\t// to step through the same fragments twice\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\n\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\n\t\t\t\t// Only skip the fragment if the fragment animation style\n\t\t\t\t// remains unchanged\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\n\t\t\t\tif( style.property === 'line-height' ) {\n\t\t\t\t\tvalue = parseFloat( computedStyles['line-height'] ) / parseFloat( computedStyles['font-size'] );\n\t\t\t\t}\n\n\t\t\t\tif( isNaN(value) ) {\n\t\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Eplicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-line[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst pimaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ pimaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ pimaryIndex ];\n\t\t\t\t\tfromMatches[key][ pimaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considerd\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n","import { extend, queryAll } from '../utils/util.js'\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( currentSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( currentSlide.querySelectorAll( '.fragment.visible' ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tcurrentSlide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tif( changedFragments.hidden.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif( changedFragments.shown.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmentshown',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}","import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\t\tthis.onDocumentKeyPress = this.onDocumentKeyPress.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.addEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.removeEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keypress' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyPress( event ) {\n\n\t\t// Check if the pressed key is question mark\n\t\tif( event.shiftKey && event.charCode === 63 ) {\n\t\t\tthis.Reveal.toggleHelp();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet isNavigationKey = [32, 37, 38, 39, 40, 78, 80].indexOf( event.keyCode ) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!( isNavigationKey && event.shiftKey || event.altKey ) &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( keyCode === 58 || keyCode === 59 || keyCode === 66 || keyCode === 86 || keyCode === 190 || keyCode === 191 ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif ( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}","/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\t// The minimum number of milliseconds that must pass between\n\t// calls to history.replaceState\n\tMAX_REPLACE_STATE_FREQUENCY = 1000\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.replaceStateTimestamp = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash( hash=window.location.hash ) {\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace( /^#\\/?/, '' );\n\t\tlet bits = name.split( '/' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet element;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\telement = document.getElementById( decodeURIComponent( name ) );\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\tif( element ) {\n\t\t\t\treturn { ...this.Reveal.getIndices( element ), f };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif( newIndices ) {\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\n\t\t\t}\n\t\t}\n\t\t// If no new indices are available, we're trying to navigate to\n\t\t// a slide hash that does not exist\n\t\telse {\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not avaialble.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\tthis.debouncedReplaceState( window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.debouncedReplaceState( '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\treplaceState( url ) {\n\n\t\twindow.history.replaceState( null, null, url );\n\t\tthis.replaceStateTimestamp = Date.now();\n\n\t}\n\n\tdebouncedReplaceState( url ) {\n\n\t\tclearTimeout( this.replaceStateTimeout );\n\n\t\tif( Date.now() - this.replaceStateTimestamp > this.MAX_REPLACE_STATE_FREQUENCY ) {\n\t\t\tthis.replaceState( url );\n\t\t}\n\t\telse {\n\t\t\tthis.replaceStateTimeout = setTimeout( () => this.replaceState( url ), this.MAX_REPLACE_STATE_FREQUENCY );\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}","import { queryAll } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\n\t\tthis.unbind();\n\t\tthis.element.remove();\n\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\n}","/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.addEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.showCursor();\n\n\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}","/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}","import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registed plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all regisered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n\tdestroy() {\n\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\n\t\t\tif( typeof plugin.destroy === 'function' ) {\n\t\t\t\tplugin.destroy();\n\t\t\t}\n\t\t} );\n\n\t\tthis.registeredPlugins = {};\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n}\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class Print {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync setupPDF() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst injectPageNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\tconst viewportElement = document.querySelector( '.reveal-viewport' );\n\t\tlet presentationBackground;\n\t\tif( viewportElement ) {\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\n\t\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\t\tlet slideNumber = 1;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\tthis.Reveal.slideContent.layout( slide );\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\n\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments, index ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\n\t\t\t\t\t\t// Inject unique page numbers for fragments\n\t\t\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\t\t\tconst numberElement = clonedPage.querySelector( '.slide-number-pdf' );\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\n\t\t\t\t\t\t\tnumberElement.innerHTML += '.' + fragmentNumber;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t}\n\n\t/**\n\t * Checks if this instance is being used to print a PDF.\n\t */\n\tisPrintingPDF() {\n\n\t\treturn ( /print-pdf/gi ).test( window.location.search );\n\n\t}\n\n}\n","import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video, audio' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}","import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}","/**\n * Handles the showing of speaker notes\n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.element && this.Reveal.getCurrentSlide() && !this.Reveal.print.isPrintingPDF() ) {\n\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.hasNotes() && !this.Reveal.print.isPrintingPDF() ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. With <aside class=\"notes\"> elements inside the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using <aside class=\"notes\"> elements\n\t\tlet notesElements = slide.querySelectorAll( 'aside.notes' );\n\t\tif( notesElements ) {\n\t\t\treturn Array.from(notesElements).map( notesElement => notesElement.innerHTML ).join( '\\n' );\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}","/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when retuning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}","import SlideContent from \"./controllers/slidecontent.js\";\nimport SlideNumber from \"./controllers/slidenumber.js\";\nimport Backgrounds from \"./controllers/backgrounds.js\";\nimport AutoAnimate from \"./controllers/autoanimate.js\";\nimport Fragments from \"./controllers/fragments.js\";\nimport Overview from \"./controllers/overview.js\";\nimport Keyboard from \"./controllers/keyboard.js\";\nimport Location from \"./controllers/location.js\";\nimport Controls from \"./controllers/controls.js\";\nimport Progress from \"./controllers/progress.js\";\nimport Pointer from \"./controllers/pointer.js\";\nimport Plugins from \"./controllers/plugins.js\";\nimport Print from \"./controllers/print.js\";\nimport Touch from \"./controllers/touch.js\";\nimport Focus from \"./controllers/focus.js\";\nimport Notes from \"./controllers/notes.js\";\nimport Playback from \"./components/playback.js\";\nimport defaultConfig from \"./config.js\";\nimport * as Util from \"./utils/util.js\";\nimport * as Device from \"./utils/device.js\";\nimport {\n  SLIDES_SELECTOR,\n  HORIZONTAL_SLIDES_SELECTOR,\n  VERTICAL_SLIDES_SELECTOR,\n  POST_MESSAGE_METHOD_BLACKLIST,\n} from \"./utils/constants.js\";\n\n// The reveal.js version\nexport const VERSION = \"4.4.0\";\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function (revealElement, options) {\n  // Support initialization with no args, one arg\n  // [options] or two args [revealElement, options]\n  if (arguments.length < 2) {\n    options = arguments[0];\n    revealElement = document.querySelector(\".reveal\");\n  }\n\n  const Reveal = {};\n\n  // Configuration defaults, can be overridden at initialization time\n  let config = {},\n    // Flags if reveal.js is loaded (has dispatched the 'ready' event)\n    ready = false,\n    // The horizontal and vertical index of the currently active slide\n    indexh,\n    indexv,\n    // The previous and current slide HTML elements\n    previousSlide,\n    currentSlide,\n    // Remember which directions that the user has navigated towards\n    navigationHistory = {\n      hasNavigatedHorizontally: false,\n      hasNavigatedVertically: false,\n    },\n    // Slides may have a data-state attribute which we pick up and apply\n    // as a class to the body. This list contains the combined state of\n    // all current slides.\n    state = [],\n    // The current scale of the presentation (see width/height config)\n    scale = 1,\n    // CSS transform that is currently applied to the slides container,\n    // split into two groups\n    slidesTransform = { layout: \"\", overview: \"\" },\n    // Cached references to DOM elements\n    dom = {},\n    // Flags if the interaction event listeners are bound\n    eventsAreBound = false,\n    // The current slide transition state; idle or running\n    transition = \"idle\",\n    // The current auto-slide duration\n    autoSlide = 0,\n    // Auto slide properties\n    autoSlidePlayer,\n    autoSlideTimeout = 0,\n    autoSlideStartTime = -1,\n    autoSlidePaused = false,\n    // Controllers for different aspects of our presentation. They're\n    // all given direct references to this Reveal instance since there\n    // may be multiple presentations running in parallel.\n    slideContent = new SlideContent(Reveal),\n    slideNumber = new SlideNumber(Reveal),\n    autoAnimate = new AutoAnimate(Reveal),\n    backgrounds = new Backgrounds(Reveal),\n    fragments = new Fragments(Reveal),\n    overview = new Overview(Reveal),\n    keyboard = new Keyboard(Reveal),\n    location = new Location(Reveal),\n    controls = new Controls(Reveal),\n    progress = new Progress(Reveal),\n    pointer = new Pointer(Reveal),\n    plugins = new Plugins(Reveal),\n    print = new Print(Reveal),\n    focus = new Focus(Reveal),\n    touch = new Touch(Reveal),\n    notes = new Notes(Reveal);\n\n  /**\n   * Starts up the presentation.\n   */\n  function initialize(initOptions) {\n    if (!revealElement)\n      throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n    // Cache references to key DOM elements\n    dom.wrapper = revealElement;\n    dom.slides = revealElement.querySelector(\".slides\");\n\n    if (!dom.slides)\n      throw 'Unable to find slides container (<div class=\"slides\">).';\n\n    // Compose our config object in order of increasing precedence:\n    // 1. Default reveal.js options\n    // 2. Options provided via Reveal.configure() prior to\n    //    initialization\n    // 3. Options passed to the Reveal constructor\n    // 4. Options passed to Reveal.initialize\n    // 5. Query params\n    config = {\n      ...defaultConfig,\n      ...config,\n      ...options,\n      ...initOptions,\n      ...Util.getQueryHash(),\n    };\n\n    setViewport();\n\n    // Force a layout when the whole page, incl fonts, has loaded\n    window.addEventListener(\"load\", layout, false);\n\n    // Register plugins and load dependencies, then move on to #start()\n    plugins.load(config.plugins, config.dependencies).then(start);\n\n    return new Promise((resolve) => Reveal.on(\"ready\", resolve));\n  }\n\n  /**\n   * Encase the presentation in a reveal.js viewport. The\n   * extent of the viewport differs based on configuration.\n   */\n  function setViewport() {\n    // Embedded decks use the reveal element as their viewport\n    if (config.embedded === true) {\n      dom.viewport =\n        Util.closest(revealElement, \".reveal-viewport\") || revealElement;\n    }\n    // Full-page decks use the body as their viewport\n    else {\n      dom.viewport = document.body;\n      document.documentElement.classList.add(\"reveal-full-page\");\n    }\n\n    dom.viewport.classList.add(\"reveal-viewport\");\n  }\n\n  /**\n   * Starts up reveal.js by binding input events and navigating\n   * to the current URL deeplink if there is one.\n   */\n  function start() {\n    ready = true;\n\n    // Remove slides hidden with data-visibility\n    removeHiddenSlides();\n\n    // Make sure we've got all the DOM elements we need\n    setupDOM();\n\n    // Listen to messages posted to this window\n    setupPostMessage();\n\n    // Prevent the slides from being scrolled out of view\n    setupScrollPrevention();\n\n    // Adds bindings for fullscreen mode\n    setupFullscreen();\n\n    // Resets all vertical slides so that only the first is visible\n    resetVerticalSlides();\n\n    // Updates the presentation to match the current configuration values\n    configure();\n\n    // Read the initial hash\n    location.readURL();\n\n    // Create slide backgrounds\n    backgrounds.update(true);\n\n    // Notify listeners that the presentation is ready but use a 1ms\n    // timeout to ensure it's not fired synchronously after #initialize()\n    setTimeout(() => {\n      // Enable transitions now that we're loaded\n      dom.slides.classList.remove(\"no-transition\");\n\n      dom.wrapper.classList.add(\"ready\");\n\n      dispatchEvent({\n        type: \"ready\",\n        data: {\n          indexh,\n          indexv,\n          currentSlide,\n        },\n      });\n    }, 1);\n\n    // Special setup and config is required when printing to PDF\n    if (print.isPrintingPDF()) {\n      removeEventListeners();\n\n      // The document needs to have loaded for the PDF layout\n      // measurements to be accurate\n      if (document.readyState === \"complete\") {\n        print.setupPDF();\n      } else {\n        window.addEventListener(\"load\", () => {\n          print.setupPDF();\n        });\n      }\n    }\n  }\n\n  /**\n   * Removes all slides with data-visibility=\"hidden\". This\n   * is done right before the rest of the presentation is\n   * initialized.\n   *\n   * If you want to show all hidden slides, initialize\n   * reveal.js with showHiddenSlides set to true.\n   */\n  function removeHiddenSlides() {\n    if (!config.showHiddenSlides) {\n      Util.queryAll(dom.wrapper, 'section[data-visibility=\"hidden\"]').forEach(\n        (slide) => {\n          slide.parentNode.removeChild(slide);\n        }\n      );\n    }\n  }\n\n  /**\n   * Finds and stores references to DOM elements which are\n   * required by the presentation. If a required element is\n   * not found, it is created.\n   */\n  function setupDOM() {\n    // Prevent transitions while we're loading\n    dom.slides.classList.add(\"no-transition\");\n\n    if (Device.isMobile) {\n      dom.wrapper.classList.add(\"no-hover\");\n    } else {\n      dom.wrapper.classList.remove(\"no-hover\");\n    }\n\n    backgrounds.render();\n    slideNumber.render();\n    controls.render();\n    progress.render();\n    notes.render();\n\n    // Overlay graphic which is displayed during the paused mode\n    dom.pauseOverlay = Util.createSingletonNode(\n      dom.wrapper,\n      \"div\",\n      \"pause-overlay\",\n      config.controls\n        ? '<button class=\"resume-button\">Resume presentation</button>'\n        : null\n    );\n\n    dom.statusElement = createStatusElement();\n\n    dom.wrapper.setAttribute(\"role\", \"application\");\n  }\n\n  /**\n   * Creates a hidden div with role aria-live to announce the\n   * current slide content. Hide the div off-screen to make it\n   * available only to Assistive Technologies.\n   *\n   * @return {HTMLElement}\n   */\n  function createStatusElement() {\n    let statusElement = dom.wrapper.querySelector(\".aria-status\");\n    if (!statusElement) {\n      statusElement = document.createElement(\"div\");\n      statusElement.style.position = \"absolute\";\n      statusElement.style.height = \"1px\";\n      statusElement.style.width = \"1px\";\n      statusElement.style.overflow = \"hidden\";\n      statusElement.style.clip = \"rect( 1px, 1px, 1px, 1px )\";\n      statusElement.classList.add(\"aria-status\");\n      statusElement.setAttribute(\"aria-live\", \"polite\");\n      statusElement.setAttribute(\"aria-atomic\", \"true\");\n      dom.wrapper.appendChild(statusElement);\n    }\n    return statusElement;\n  }\n\n  /**\n   * Announces the given text to screen readers.\n   */\n  function announceStatus(value) {\n    dom.statusElement.textContent = value;\n  }\n\n  /**\n   * Converts the given HTML element into a string of text\n   * that can be announced to a screen reader. Hidden\n   * elements are excluded.\n   */\n  function getStatusText(node) {\n    let text = \"\";\n\n    // Text node\n    if (node.nodeType === 3) {\n      text += node.textContent;\n    }\n    // Element node\n    else if (node.nodeType === 1) {\n      let isAriaHidden = node.getAttribute(\"aria-hidden\");\n      let isDisplayHidden = window.getComputedStyle(node)[\"display\"] === \"none\";\n      if (isAriaHidden !== \"true\" && !isDisplayHidden) {\n        Array.from(node.childNodes).forEach((child) => {\n          text += getStatusText(child);\n        });\n      }\n    }\n\n    text = text.trim();\n\n    return text === \"\" ? \"\" : text + \" \";\n  }\n\n  /**\n   * This is an unfortunate necessity. Some actions – such as\n   * an input field being focused in an iframe or using the\n   * keyboard to expand text selection beyond the bounds of\n   * a slide – can trigger our content to be pushed out of view.\n   * This scrolling can not be prevented by hiding overflow in\n   * CSS (we already do) so we have to resort to repeatedly\n   * checking if the slides have been offset :(\n   */\n  function setupScrollPrevention() {\n    setInterval(() => {\n      if (dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0) {\n        dom.wrapper.scrollTop = 0;\n        dom.wrapper.scrollLeft = 0;\n      }\n    }, 1000);\n  }\n\n  /**\n   * After entering fullscreen we need to force a layout to\n   * get our presentations to scale correctly. This behavior\n   * is inconsistent across browsers but a force layout seems\n   * to normalize it.\n   */\n  function setupFullscreen() {\n    document.addEventListener(\"fullscreenchange\", onFullscreenChange);\n    document.addEventListener(\"webkitfullscreenchange\", onFullscreenChange);\n  }\n\n  /**\n   * Registers a listener to postMessage events, this makes it\n   * possible to call all reveal.js API methods from another\n   * window. For example:\n   *\n   * revealWindow.postMessage( JSON.stringify({\n   *   method: 'slide',\n   *   args: [ 2 ]\n   * }), '*' );\n   */\n  function setupPostMessage() {\n    if (config.postMessage) {\n      window.addEventListener(\"message\", onPostMessage, false);\n    }\n  }\n\n  /**\n   * Applies the configuration settings from the config\n   * object. May be called multiple times.\n   *\n   * @param {object} options\n   */\n  function configure(options) {\n    const oldConfig = { ...config };\n\n    // New config options may be passed when this method\n    // is invoked through the API after initialization\n    if (typeof options === \"object\") Util.extend(config, options);\n\n    // Abort if reveal.js hasn't finished loading, config\n    // changes will be applied automatically once ready\n    if (Reveal.isReady() === false) return;\n\n    const numberOfSlides = dom.wrapper.querySelectorAll(SLIDES_SELECTOR).length;\n\n    // The transition is added as a class on the .reveal element\n    dom.wrapper.classList.remove(oldConfig.transition);\n    dom.wrapper.classList.add(config.transition);\n\n    dom.wrapper.setAttribute(\"data-transition-speed\", config.transitionSpeed);\n    dom.wrapper.setAttribute(\n      \"data-background-transition\",\n      config.backgroundTransition\n    );\n\n    // Expose our configured slide dimensions as custom props\n    dom.viewport.style.setProperty(\"--slide-width\", config.width + \"px\");\n    dom.viewport.style.setProperty(\"--slide-height\", config.height + \"px\");\n\n    if (config.shuffle) {\n      shuffle();\n    }\n\n    Util.toggleClass(dom.wrapper, \"embedded\", config.embedded);\n    Util.toggleClass(dom.wrapper, \"rtl\", config.rtl);\n    Util.toggleClass(dom.wrapper, \"center\", config.center);\n\n    // Exit the paused mode if it was configured off\n    if (config.pause === false) {\n      resume();\n    }\n\n    // Iframe link previews\n    if (config.previewLinks) {\n      enablePreviewLinks();\n      disablePreviewLinks(\"[data-preview-link=false]\");\n    } else {\n      disablePreviewLinks();\n      enablePreviewLinks(\"[data-preview-link]:not([data-preview-link=false])\");\n    }\n\n    // Reset all changes made by auto-animations\n    autoAnimate.reset();\n\n    // Remove existing auto-slide controls\n    if (autoSlidePlayer) {\n      autoSlidePlayer.destroy();\n      autoSlidePlayer = null;\n    }\n\n    // Generate auto-slide controls if needed\n    if (numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable) {\n      autoSlidePlayer = new Playback(dom.wrapper, () => {\n        return Math.min(\n          Math.max((Date.now() - autoSlideStartTime) / autoSlide, 0),\n          1\n        );\n      });\n\n      autoSlidePlayer.on(\"click\", onAutoSlidePlayerClick);\n      autoSlidePaused = false;\n    }\n\n    // Add the navigation mode to the DOM so we can adjust styling\n    if (config.navigationMode !== \"default\") {\n      dom.wrapper.setAttribute(\"data-navigation-mode\", config.navigationMode);\n    } else {\n      dom.wrapper.removeAttribute(\"data-navigation-mode\");\n    }\n\n    notes.configure(config, oldConfig);\n    focus.configure(config, oldConfig);\n    pointer.configure(config, oldConfig);\n    controls.configure(config, oldConfig);\n    progress.configure(config, oldConfig);\n    keyboard.configure(config, oldConfig);\n    fragments.configure(config, oldConfig);\n    slideNumber.configure(config, oldConfig);\n\n    sync();\n  }\n\n  /**\n   * Binds all event listeners.\n   */\n  function addEventListeners() {\n    eventsAreBound = true;\n\n    window.addEventListener(\"resize\", onWindowResize, false);\n\n    if (config.touch) touch.bind();\n    if (config.keyboard) keyboard.bind();\n    if (config.progress) progress.bind();\n    if (config.respondToHashChanges) location.bind();\n    controls.bind();\n    focus.bind();\n\n    dom.slides.addEventListener(\"click\", onSlidesClicked, false);\n    dom.slides.addEventListener(\"transitionend\", onTransitionEnd, false);\n    dom.pauseOverlay.addEventListener(\"click\", resume, false);\n\n    if (config.focusBodyOnPageVisibilityChange) {\n      document.addEventListener(\n        \"visibilitychange\",\n        onPageVisibilityChange,\n        false\n      );\n    }\n  }\n\n  /**\n   * Unbinds all event listeners.\n   */\n  function removeEventListeners() {\n    eventsAreBound = false;\n\n    touch.unbind();\n    focus.unbind();\n    keyboard.unbind();\n    controls.unbind();\n    progress.unbind();\n    location.unbind();\n\n    window.removeEventListener(\"resize\", onWindowResize, false);\n\n    dom.slides.removeEventListener(\"click\", onSlidesClicked, false);\n    dom.slides.removeEventListener(\"transitionend\", onTransitionEnd, false);\n    dom.pauseOverlay.removeEventListener(\"click\", resume, false);\n  }\n\n  /**\n   * Uninitializes reveal.js by undoing changes made to the\n   * DOM and removing all event listeners.\n   */\n  function destroy() {\n    removeEventListeners();\n    cancelAutoSlide();\n    disablePreviewLinks();\n\n    // Destroy controllers\n    notes.destroy();\n    focus.destroy();\n    plugins.destroy();\n    pointer.destroy();\n    controls.destroy();\n    progress.destroy();\n    backgrounds.destroy();\n    slideNumber.destroy();\n\n    // Remove event listeners\n    document.removeEventListener(\"fullscreenchange\", onFullscreenChange);\n    document.removeEventListener(\"webkitfullscreenchange\", onFullscreenChange);\n    document.removeEventListener(\n      \"visibilitychange\",\n      onPageVisibilityChange,\n      false\n    );\n    window.removeEventListener(\"message\", onPostMessage, false);\n    window.removeEventListener(\"load\", layout, false);\n\n    // Undo DOM changes\n    if (dom.pauseOverlay) dom.pauseOverlay.remove();\n    if (dom.statusElement) dom.statusElement.remove();\n\n    document.documentElement.classList.remove(\"reveal-full-page\");\n\n    dom.wrapper.classList.remove(\n      \"ready\",\n      \"center\",\n      \"has-horizontal-slides\",\n      \"has-vertical-slides\"\n    );\n    dom.wrapper.removeAttribute(\"data-transition-speed\");\n    dom.wrapper.removeAttribute(\"data-background-transition\");\n\n    dom.viewport.classList.remove(\"reveal-viewport\");\n    dom.viewport.style.removeProperty(\"--slide-width\");\n    dom.viewport.style.removeProperty(\"--slide-height\");\n\n    dom.slides.style.removeProperty(\"width\");\n    dom.slides.style.removeProperty(\"height\");\n    dom.slides.style.removeProperty(\"zoom\");\n    dom.slides.style.removeProperty(\"left\");\n    dom.slides.style.removeProperty(\"top\");\n    dom.slides.style.removeProperty(\"bottom\");\n    dom.slides.style.removeProperty(\"right\");\n    dom.slides.style.removeProperty(\"transform\");\n\n    Array.from(dom.wrapper.querySelectorAll(SLIDES_SELECTOR)).forEach(\n      (slide) => {\n        slide.style.removeProperty(\"display\");\n        slide.style.removeProperty(\"top\");\n        slide.removeAttribute(\"hidden\");\n        slide.removeAttribute(\"aria-hidden\");\n      }\n    );\n  }\n\n  /**\n   * Adds a listener to one of our custom reveal.js events,\n   * like slidechanged.\n   */\n  function on(type, listener, useCapture) {\n    revealElement.addEventListener(type, listener, useCapture);\n  }\n\n  /**\n   * Unsubscribes from a reveal.js event.\n   */\n  function off(type, listener, useCapture) {\n    revealElement.removeEventListener(type, listener, useCapture);\n  }\n\n  /**\n   * Applies CSS transforms to the slides container. The container\n   * is transformed from two separate sources: layout and the overview\n   * mode.\n   *\n   * @param {object} transforms\n   */\n  function transformSlides(transforms) {\n    // Pick up new transforms from arguments\n    if (typeof transforms.layout === \"string\")\n      slidesTransform.layout = transforms.layout;\n    if (typeof transforms.overview === \"string\")\n      slidesTransform.overview = transforms.overview;\n\n    // Apply the transforms to the slides container\n    if (slidesTransform.layout) {\n      Util.transformElement(\n        dom.slides,\n        slidesTransform.layout + \" \" + slidesTransform.overview\n      );\n    } else {\n      Util.transformElement(dom.slides, slidesTransform.overview);\n    }\n  }\n\n  /**\n   * Dispatches an event of the specified type from the\n   * reveal DOM element.\n   */\n  function dispatchEvent({ target = dom.wrapper, type, data, bubbles = true }) {\n    let event = document.createEvent(\"HTMLEvents\", 1, 2);\n    event.initEvent(type, bubbles, true);\n    Util.extend(event, data);\n    target.dispatchEvent(event);\n\n    if (target === dom.wrapper) {\n      // If we're in an iframe, post each reveal.js event to the\n      // parent window. Used by the notes plugin\n      dispatchPostMessage(type);\n    }\n\n    return event;\n  }\n\n  /**\n   * Dispatched a postMessage of the given type from our window.\n   */\n  function dispatchPostMessage(type, data) {\n    if (config.postMessageEvents && window.parent !== window.self) {\n      let message = {\n        namespace: \"reveal\",\n        eventName: type,\n        state: getState(),\n      };\n\n      Util.extend(message, data);\n\n      window.parent.postMessage(JSON.stringify(message), \"*\");\n    }\n  }\n\n  /**\n   * Bind preview frame links.\n   *\n   * @param {string} [selector=a] - selector for anchors\n   */\n  function enablePreviewLinks(selector = \"a\") {\n    Array.from(dom.wrapper.querySelectorAll(selector)).forEach((element) => {\n      if (/^(http|www)/gi.test(element.getAttribute(\"href\"))) {\n        element.addEventListener(\"click\", onPreviewLinkClicked, false);\n      }\n    });\n  }\n\n  /**\n   * Unbind preview frame links.\n   */\n  function disablePreviewLinks(selector = \"a\") {\n    Array.from(dom.wrapper.querySelectorAll(selector)).forEach((element) => {\n      if (/^(http|www)/gi.test(element.getAttribute(\"href\"))) {\n        element.removeEventListener(\"click\", onPreviewLinkClicked, false);\n      }\n    });\n  }\n\n  /**\n   * Opens a preview window for the target URL.\n   *\n   * @param {string} url - url for preview iframe src\n   */\n  function showPreview(url) {\n    closeOverlay();\n\n    dom.overlay = document.createElement(\"div\");\n    dom.overlay.classList.add(\"overlay\");\n    dom.overlay.classList.add(\"overlay-preview\");\n    dom.wrapper.appendChild(dom.overlay);\n\n    dom.overlay.innerHTML = `<header>\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t</header>\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<div class=\"viewport\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"viewport-inner\">\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n    dom.overlay.querySelector(\"iframe\").addEventListener(\n      \"load\",\n      (event) => {\n        dom.overlay.classList.add(\"loaded\");\n      },\n      false\n    );\n\n    dom.overlay.querySelector(\".close\").addEventListener(\n      \"click\",\n      (event) => {\n        closeOverlay();\n        event.preventDefault();\n      },\n      false\n    );\n\n    dom.overlay.querySelector(\".external\").addEventListener(\n      \"click\",\n      (event) => {\n        closeOverlay();\n      },\n      false\n    );\n  }\n\n  /**\n   * Open or close help overlay window.\n   *\n   * @param {Boolean} [override] Flag which overrides the\n   * toggle logic and forcibly sets the desired state. True means\n   * help is open, false means it's closed.\n   */\n  function toggleHelp(override) {\n    if (typeof override === \"boolean\") {\n      override ? showHelp() : closeOverlay();\n    } else {\n      if (dom.overlay) {\n        closeOverlay();\n      } else {\n        showHelp();\n      }\n    }\n  }\n\n  /**\n   * Opens an overlay window with help material.\n   */\n  function showHelp() {\n    if (config.help) {\n      closeOverlay();\n\n      dom.overlay = document.createElement(\"div\");\n      dom.overlay.classList.add(\"overlay\");\n      dom.overlay.classList.add(\"overlay-help\");\n      dom.wrapper.appendChild(dom.overlay);\n\n      let html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n      let shortcuts = keyboard.getShortcuts(),\n        bindings = keyboard.getBindings();\n\n      html += \"<table><th>KEY</th><th>ACTION</th>\";\n      for (let key in shortcuts) {\n        html += `<tr><td>${key}</td><td>${shortcuts[key]}</td></tr>`;\n      }\n\n      // Add custom key bindings that have associated descriptions\n      for (let binding in bindings) {\n        if (bindings[binding].key && bindings[binding].description) {\n          html += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n        }\n      }\n\n      html += \"</table>\";\n\n      dom.overlay.innerHTML = `\n\t\t\t\t<header>\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"viewport\">\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n      dom.overlay.querySelector(\".close\").addEventListener(\n        \"click\",\n        (event) => {\n          closeOverlay();\n          event.preventDefault();\n        },\n        false\n      );\n    }\n  }\n\n  /**\n   * Closes any currently open overlay.\n   */\n  function closeOverlay() {\n    if (dom.overlay) {\n      dom.overlay.parentNode.removeChild(dom.overlay);\n      dom.overlay = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Applies JavaScript-controlled layout rules to the\n   * presentation.\n   */\n  function layout() {\n    if (dom.wrapper && !print.isPrintingPDF()) {\n      if (!config.disableLayout) {\n        // On some mobile devices '100vh' is taller than the visible\n        // viewport which leads to part of the presentation being\n        // cut off. To work around this we define our own '--vh' custom\n        // property where 100x adds up to the correct height.\n        //\n        // https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n        if (Device.isMobile && !config.embedded) {\n          document.documentElement.style.setProperty(\n            \"--vh\",\n            window.innerHeight * 0.01 + \"px\"\n          );\n        }\n\n        const size = getComputedSlideSize();\n\n        const oldScale = scale;\n\n        // Layout the contents of the slides\n        layoutSlideContents(config.width, config.height);\n\n        dom.slides.style.width = size.width + \"px\";\n        dom.slides.style.height = size.height + \"px\";\n\n        // Determine scale of content to fit within available space\n        scale = Math.min(\n          size.presentationWidth / size.width,\n          size.presentationHeight / size.height\n        );\n\n        // Respect max/min scale settings\n        scale = Math.max(scale, config.minScale);\n        scale = Math.min(scale, config.maxScale);\n\n        // Don't apply any scaling styles if scale is 1\n        if (scale === 1) {\n          dom.slides.style.zoom = \"\";\n          dom.slides.style.left = \"\";\n          dom.slides.style.top = \"\";\n          dom.slides.style.bottom = \"\";\n          dom.slides.style.right = \"\";\n          transformSlides({ layout: \"\" });\n        } else {\n          dom.slides.style.zoom = \"\";\n          dom.slides.style.left = \"50%\";\n          dom.slides.style.top = \"50%\";\n          dom.slides.style.bottom = \"auto\";\n          dom.slides.style.right = \"auto\";\n          transformSlides({\n            layout: \"translate(-50%, -50%) scale(\" + scale + \")\",\n          });\n        }\n\n        // Select all slides, vertical and horizontal\n        const slides = Array.from(\n          dom.wrapper.querySelectorAll(SLIDES_SELECTOR)\n        );\n\n        for (let i = 0, len = slides.length; i < len; i++) {\n          const slide = slides[i];\n\n          // Don't bother updating invisible slides\n          if (slide.style.display === \"none\") {\n            continue;\n          }\n\n          if (config.center || slide.classList.contains(\"center\")) {\n            // Vertical stacks are not centred since their section\n            // children will be\n            if (slide.classList.contains(\"stack\")) {\n              slide.style.top = 0;\n            } else {\n              slide.style.top =\n                Math.max((size.height - slide.scrollHeight) / 2, 0) + \"px\";\n            }\n          } else {\n            slide.style.top = \"\";\n          }\n        }\n\n        if (oldScale !== scale) {\n          dispatchEvent({\n            type: \"resize\",\n            data: {\n              oldScale,\n              scale,\n              size,\n            },\n          });\n        }\n      }\n\n      dom.viewport.style.setProperty(\"--slide-scale\", scale);\n\n      progress.update();\n      backgrounds.updateParallax();\n\n      if (overview.isActive()) {\n        overview.update();\n      }\n    }\n  }\n\n  /**\n   * Applies layout logic to the contents of all slides in\n   * the presentation.\n   *\n   * @param {string|number} width\n   * @param {string|number} height\n   */\n  function layoutSlideContents(width, height) {\n    // Handle sizing of elements with the 'r-stretch' class\n    Util.queryAll(\n      dom.slides,\n      \"section > .stretch, section > .r-stretch\"\n    ).forEach((element) => {\n      // Determine how much vertical space we can use\n      let remainingHeight = Util.getRemainingHeight(element, height);\n\n      // Consider the aspect ratio of media elements\n      if (/(img|video)/gi.test(element.nodeName)) {\n        const nw = element.naturalWidth || element.videoWidth,\n          nh = element.naturalHeight || element.videoHeight;\n\n        const es = Math.min(width / nw, remainingHeight / nh);\n\n        element.style.width = nw * es + \"px\";\n        element.style.height = nh * es + \"px\";\n      } else {\n        element.style.width = width + \"px\";\n        element.style.height = remainingHeight + \"px\";\n      }\n    });\n  }\n\n  /**\n   * Calculates the computed pixel size of our slides. These\n   * values are based on the width and height configuration\n   * options.\n   *\n   * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n   * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n   */\n  function getComputedSlideSize(presentationWidth, presentationHeight) {\n    const size = {\n      // Slide size\n      width: config.width,\n      height: config.height,\n\n      // Presentation size\n      presentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n      presentationHeight: presentationHeight || dom.wrapper.offsetHeight,\n    };\n\n    // Reduce available space by margin\n    size.presentationWidth -= size.presentationWidth * config.margin;\n    size.presentationHeight -= size.presentationHeight * config.margin;\n\n    // Slide width may be a percentage of available width\n    if (typeof size.width === \"string\" && /%$/.test(size.width)) {\n      size.width = (parseInt(size.width, 10) / 100) * size.presentationWidth;\n    }\n\n    // Slide height may be a percentage of available height\n    if (typeof size.height === \"string\" && /%$/.test(size.height)) {\n      size.height = (parseInt(size.height, 10) / 100) * size.presentationHeight;\n    }\n\n    return size;\n  }\n\n  /**\n   * Stores the vertical index of a stack so that the same\n   * vertical slide can be selected when navigating to and\n   * from the stack.\n   *\n   * @param {HTMLElement} stack The vertical stack element\n   * @param {string|number} [v=0] Index to memorize\n   */\n  function setPreviousVerticalIndex(stack, v) {\n    if (typeof stack === \"object\" && typeof stack.setAttribute === \"function\") {\n      stack.setAttribute(\"data-previous-indexv\", v || 0);\n    }\n  }\n\n  /**\n   * Retrieves the vertical index which was stored using\n   * #setPreviousVerticalIndex() or 0 if no previous index\n   * exists.\n   *\n   * @param {HTMLElement} stack The vertical stack element\n   */\n  function getPreviousVerticalIndex(stack) {\n    if (\n      typeof stack === \"object\" &&\n      typeof stack.setAttribute === \"function\" &&\n      stack.classList.contains(\"stack\")\n    ) {\n      // Prefer manually defined start-indexv\n      const attributeName = stack.hasAttribute(\"data-start-indexv\")\n        ? \"data-start-indexv\"\n        : \"data-previous-indexv\";\n\n      return parseInt(stack.getAttribute(attributeName) || 0, 10);\n    }\n\n    return 0;\n  }\n\n  /**\n   * Checks if the current or specified slide is vertical\n   * (nested within another slide).\n   *\n   * @param {HTMLElement} [slide=currentSlide] The slide to check\n   * orientation of\n   * @return {Boolean}\n   */\n  function isVerticalSlide(slide = currentSlide) {\n    return (\n      slide && slide.parentNode && !!slide.parentNode.nodeName.match(/section/i)\n    );\n  }\n\n  /**\n   * Returns true if we're on the last slide in the current\n   * vertical stack.\n   */\n  function isLastVerticalSlide() {\n    if (currentSlide && isVerticalSlide(currentSlide)) {\n      // Does this slide have a next sibling?\n      if (currentSlide.nextElementSibling) return false;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Returns true if we're currently on the first slide in\n   * the presentation.\n   */\n  function isFirstSlide() {\n    return indexh === 0 && indexv === 0;\n  }\n\n  /**\n   * Returns true if we're currently on the last slide in\n   * the presenation. If the last slide is a stack, we only\n   * consider this the last slide if it's at the end of the\n   * stack.\n   */\n  function isLastSlide() {\n    if (currentSlide) {\n      // Does this slide have a next sibling?\n      if (currentSlide.nextElementSibling) return false;\n\n      // If it's vertical, does its parent have a next sibling?\n      if (\n        isVerticalSlide(currentSlide) &&\n        currentSlide.parentNode.nextElementSibling\n      )\n        return false;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Enters the paused mode which fades everything on screen to\n   * black.\n   */\n  function pause() {\n    if (config.pause) {\n      const wasPaused = dom.wrapper.classList.contains(\"paused\");\n\n      cancelAutoSlide();\n      dom.wrapper.classList.add(\"paused\");\n\n      if (wasPaused === false) {\n        dispatchEvent({ type: \"paused\" });\n      }\n    }\n  }\n\n  /**\n   * Exits from the paused mode.\n   */\n  function resume() {\n    const wasPaused = dom.wrapper.classList.contains(\"paused\");\n    dom.wrapper.classList.remove(\"paused\");\n\n    cueAutoSlide();\n\n    if (wasPaused) {\n      dispatchEvent({ type: \"resumed\" });\n    }\n  }\n\n  /**\n   * Toggles the paused mode on and off.\n   */\n  function togglePause(override) {\n    if (typeof override === \"boolean\") {\n      override ? pause() : resume();\n    } else {\n      isPaused() ? resume() : pause();\n    }\n  }\n\n  /**\n   * Checks if we are currently in the paused mode.\n   *\n   * @return {Boolean}\n   */\n  function isPaused() {\n    return dom.wrapper.classList.contains(\"paused\");\n  }\n\n  /**\n   * Toggles the auto slide mode on and off.\n   *\n   * @param {Boolean} [override] Flag which sets the desired state.\n   * True means autoplay starts, false means it stops.\n   */\n\n  function toggleAutoSlide(override) {\n    if (typeof override === \"boolean\") {\n      override ? resumeAutoSlide() : pauseAutoSlide();\n    } else {\n      autoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n    }\n  }\n\n  /**\n   * Checks if the auto slide mode is currently on.\n   *\n   * @return {Boolean}\n   */\n  function isAutoSliding() {\n    return !!(autoSlide && !autoSlidePaused);\n  }\n\n  /**\n   * Steps from the current point in the presentation to the\n   * slide which matches the specified horizontal and vertical\n   * indices.\n   *\n   * @param {number} [h=indexh] Horizontal index of the target slide\n   * @param {number} [v=indexv] Vertical index of the target slide\n   * @param {number} [f] Index of a fragment within the\n   * target slide to activate\n   * @param {number} [origin] Origin for use in multimaster environments\n   */\n  function slide(h, v, f, origin) {\n    // Dispatch an event before hte slide\n    const slidechange = dispatchEvent({\n      type: \"beforeslidechange\",\n      data: {\n        indexh: h === undefined ? indexh : h,\n        indexv: v === undefined ? indexv : v,\n        origin,\n      },\n    });\n\n    // Abort if this slide change was prevented by an event listener\n    if (slidechange.defaultPrevented) return;\n\n    // Remember where we were at before\n    previousSlide = currentSlide;\n\n    // Query all horizontal slides in the deck\n    const horizontalSlides = dom.wrapper.querySelectorAll(\n      HORIZONTAL_SLIDES_SELECTOR\n    );\n\n    // Abort if there are no slides\n    if (horizontalSlides.length === 0) return;\n\n    // If no vertical index is specified and the upcoming slide is a\n    // stack, resume at its previous vertical index\n    if (v === undefined && !overview.isActive()) {\n      v = getPreviousVerticalIndex(horizontalSlides[h]);\n    }\n\n    // If we were on a vertical stack, remember what vertical index\n    // it was on so we can resume at the same position when returning\n    if (\n      previousSlide &&\n      previousSlide.parentNode &&\n      previousSlide.parentNode.classList.contains(\"stack\")\n    ) {\n      setPreviousVerticalIndex(previousSlide.parentNode, indexv);\n    }\n\n    // Remember the state before this slide\n    const stateBefore = state.concat();\n\n    // Reset the state array\n    state.length = 0;\n\n    let indexhBefore = indexh || 0,\n      indexvBefore = indexv || 0;\n\n    // Activate and transition to the new slide\n    indexh = updateSlides(\n      HORIZONTAL_SLIDES_SELECTOR,\n      h === undefined ? indexh : h\n    );\n    indexv = updateSlides(\n      VERTICAL_SLIDES_SELECTOR,\n      v === undefined ? indexv : v\n    );\n\n    // Dispatch an event if the slide changed\n    let slideChanged = indexh !== indexhBefore || indexv !== indexvBefore;\n\n    // Ensure that the previous slide is never the same as the current\n    if (!slideChanged) previousSlide = null;\n\n    // Find the current horizontal slide and any possible vertical slides\n    // within it\n    let currentHorizontalSlide = horizontalSlides[indexh],\n      currentVerticalSlides =\n        currentHorizontalSlide.querySelectorAll(\"section\");\n\n    // Store references to the previous and current slides\n    currentSlide = currentVerticalSlides[indexv] || currentHorizontalSlide;\n\n    let autoAnimateTransition = false;\n\n    // Detect if we're moving between two auto-animated slides\n    if (slideChanged && previousSlide && currentSlide && !overview.isActive()) {\n      // If this is an auto-animated transition, we disable the\n      // regular slide transition\n      //\n      // Note 20-03-2020:\n      // This needs to happen before we update slide visibility,\n      // otherwise transitions will still run in Safari.\n      if (\n        previousSlide.hasAttribute(\"data-auto-animate\") &&\n        currentSlide.hasAttribute(\"data-auto-animate\") &&\n        previousSlide.getAttribute(\"data-auto-animate-id\") ===\n          currentSlide.getAttribute(\"data-auto-animate-id\") &&\n        !(\n          indexh > indexhBefore || indexv > indexvBefore\n            ? currentSlide\n            : previousSlide\n        ).hasAttribute(\"data-auto-animate-restart\")\n      ) {\n        autoAnimateTransition = true;\n        dom.slides.classList.add(\"disable-slide-transitions\");\n      }\n\n      transition = \"running\";\n    }\n\n    // Update the visibility of slides now that the indices have changed\n    updateSlidesVisibility();\n\n    layout();\n\n    // Update the overview if it's currently active\n    if (overview.isActive()) {\n      overview.update();\n    }\n\n    // Show fragment, if specified\n    if (typeof f !== \"undefined\") {\n      fragments.goto(f);\n    }\n\n    // Solves an edge case where the previous slide maintains the\n    // 'present' class when navigating between adjacent vertical\n    // stacks\n    if (previousSlide && previousSlide !== currentSlide) {\n      previousSlide.classList.remove(\"present\");\n      previousSlide.setAttribute(\"aria-hidden\", \"true\");\n\n      // Reset all slides upon navigate to home\n      if (isFirstSlide()) {\n        // Launch async task\n        setTimeout(() => {\n          getVerticalStacks().forEach((slide) => {\n            setPreviousVerticalIndex(slide, 0);\n          });\n        }, 0);\n      }\n    }\n\n    // Apply the new state\n    stateLoop: for (let i = 0, len = state.length; i < len; i++) {\n      // Check if this state existed on the previous slide. If it\n      // did, we will avoid adding it repeatedly\n      for (let j = 0; j < stateBefore.length; j++) {\n        if (stateBefore[j] === state[i]) {\n          stateBefore.splice(j, 1);\n          continue stateLoop;\n        }\n      }\n\n      dom.viewport.classList.add(state[i]);\n\n      // Dispatch custom event matching the state's name\n      dispatchEvent({ type: state[i] });\n    }\n\n    // Clean up the remains of the previous state\n    while (stateBefore.length) {\n      dom.viewport.classList.remove(stateBefore.pop());\n    }\n\n    if (slideChanged) {\n      dispatchEvent({\n        type: \"slidechanged\",\n        data: {\n          indexh,\n          indexv,\n          previousSlide,\n          currentSlide,\n          origin,\n        },\n      });\n    }\n\n    // Handle embedded content\n    if (slideChanged || !previousSlide) {\n      slideContent.stopEmbeddedContent(previousSlide);\n      slideContent.startEmbeddedContent(currentSlide);\n    }\n\n    // Announce the current slide contents to screen readers\n    // Use animation frame to prevent getComputedStyle in getStatusText\n    // from triggering layout mid-frame\n    requestAnimationFrame(() => {\n      announceStatus(getStatusText(currentSlide));\n    });\n\n    progress.update();\n    controls.update();\n    notes.update();\n    backgrounds.update();\n    backgrounds.updateParallax();\n    slideNumber.update();\n    fragments.update();\n\n    // Update the URL hash\n    location.writeURL();\n\n    cueAutoSlide();\n\n    // Auto-animation\n    if (autoAnimateTransition) {\n      setTimeout(() => {\n        dom.slides.classList.remove(\"disable-slide-transitions\");\n      }, 0);\n\n      if (config.autoAnimate) {\n        // Run the auto-animation between our slides\n        autoAnimate.run(previousSlide, currentSlide);\n      }\n    }\n  }\n\n  /**\n   * Syncs the presentation with the current DOM. Useful\n   * when new slides or control elements are added or when\n   * the configuration has changed.\n   */\n  function sync() {\n    // Subscribe to input\n    removeEventListeners();\n    addEventListeners();\n\n    // Force a layout to make sure the current config is accounted for\n    layout();\n\n    // Reflect the current autoSlide value\n    autoSlide = config.autoSlide;\n\n    // Start auto-sliding if it's enabled\n    cueAutoSlide();\n\n    // Re-create all slide backgrounds\n    backgrounds.create();\n\n    // Write the current hash to the URL\n    location.writeURL();\n\n    fragments.sortAll();\n\n    controls.update();\n    progress.update();\n\n    updateSlidesVisibility();\n\n    notes.update();\n    notes.updateVisibility();\n    backgrounds.update(true);\n    slideNumber.update();\n    slideContent.formatEmbeddedContent();\n\n    // Start or stop embedded content depending on global config\n    if (config.autoPlayMedia === false) {\n      slideContent.stopEmbeddedContent(currentSlide, { unloadIframes: false });\n    } else {\n      slideContent.startEmbeddedContent(currentSlide);\n    }\n\n    if (overview.isActive()) {\n      overview.layout();\n    }\n  }\n\n  /**\n   * Updates reveal.js to keep in sync with new slide attributes. For\n   * example, if you add a new `data-background-image` you can call\n   * this to have reveal.js render the new background image.\n   *\n   * Similar to #sync() but more efficient when you only need to\n   * refresh a specific slide.\n   *\n   * @param {HTMLElement} slide\n   */\n  function syncSlide(slide = currentSlide) {\n    backgrounds.sync(slide);\n    fragments.sync(slide);\n\n    slideContent.load(slide);\n\n    backgrounds.update();\n    notes.update();\n  }\n\n  /**\n   * Resets all vertical slides so that only the first\n   * is visible.\n   */\n  function resetVerticalSlides() {\n    getHorizontalSlides().forEach((horizontalSlide) => {\n      Util.queryAll(horizontalSlide, \"section\").forEach((verticalSlide, y) => {\n        if (y > 0) {\n          verticalSlide.classList.remove(\"present\");\n          verticalSlide.classList.remove(\"past\");\n          verticalSlide.classList.add(\"future\");\n          verticalSlide.setAttribute(\"aria-hidden\", \"true\");\n        }\n      });\n    });\n  }\n\n  /**\n   * Randomly shuffles all slides in the deck.\n   */\n  function shuffle(slides = getHorizontalSlides()) {\n    slides.forEach((slide, i) => {\n      // Insert the slide next to a randomly picked sibling slide\n      // slide. This may cause the slide to insert before itself,\n      // but that's not an issue.\n      let beforeSlide = slides[Math.floor(Math.random() * slides.length)];\n      if (beforeSlide.parentNode === slide.parentNode) {\n        slide.parentNode.insertBefore(slide, beforeSlide);\n      }\n\n      // Randomize the order of vertical slides (if there are any)\n      let verticalSlides = slide.querySelectorAll(\"section\");\n      if (verticalSlides.length) {\n        shuffle(verticalSlides);\n      }\n    });\n  }\n\n  /**\n   * Updates one dimension of slides by showing the slide\n   * with the specified index.\n   *\n   * @param {string} selector A CSS selector that will fetch\n   * the group of slides we are working with\n   * @param {number} index The index of the slide that should be\n   * shown\n   *\n   * @return {number} The index of the slide that is now shown,\n   * might differ from the passed in index if it was out of\n   * bounds.\n   */\n  function updateSlides(selector, index) {\n    // Select all slides and convert the NodeList result to\n    // an array\n    let slides = Util.queryAll(dom.wrapper, selector),\n      slidesLength = slides.length;\n\n    let printMode = print.isPrintingPDF();\n    let loopedForwards = false;\n    let loopedBackwards = false;\n\n    if (slidesLength) {\n      // Should the index loop?\n      if (config.loop) {\n        if (index >= slidesLength) loopedForwards = true;\n\n        index %= slidesLength;\n\n        if (index < 0) {\n          index = slidesLength + index;\n          loopedBackwards = true;\n        }\n      }\n\n      // Enforce max and minimum index bounds\n      index = Math.max(Math.min(index, slidesLength - 1), 0);\n\n      for (let i = 0; i < slidesLength; i++) {\n        let element = slides[i];\n\n        let reverse = config.rtl && !isVerticalSlide(element);\n\n        // Avoid .remove() with multiple args for IE11 support\n        element.classList.remove(\"past\");\n        element.classList.remove(\"present\");\n        element.classList.remove(\"future\");\n\n        // http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n        element.setAttribute(\"hidden\", \"\");\n        element.setAttribute(\"aria-hidden\", \"true\");\n\n        // If this element contains vertical slides\n        if (element.querySelector(\"section\")) {\n          element.classList.add(\"stack\");\n        }\n\n        // If we're printing static slides, all slides are \"present\"\n        if (printMode) {\n          element.classList.add(\"present\");\n          continue;\n        }\n\n        if (i < index) {\n          // Any element previous to index is given the 'past' class\n          element.classList.add(reverse ? \"future\" : \"past\");\n\n          if (config.fragments) {\n            // Show all fragments in prior slides\n            showFragmentsIn(element);\n          }\n        } else if (i > index) {\n          // Any element subsequent to index is given the 'future' class\n          element.classList.add(reverse ? \"past\" : \"future\");\n\n          if (config.fragments) {\n            // Hide all fragments in future slides\n            hideFragmentsIn(element);\n          }\n        }\n        // Update the visibility of fragments when a presentation loops\n        // in either direction\n        else if (i === index && config.fragments) {\n          if (loopedForwards) {\n            hideFragmentsIn(element);\n          } else if (loopedBackwards) {\n            showFragmentsIn(element);\n          }\n        }\n      }\n\n      let slide = slides[index];\n      let wasPresent = slide.classList.contains(\"present\");\n\n      // Mark the current slide as present\n      slide.classList.add(\"present\");\n      slide.removeAttribute(\"hidden\");\n      slide.removeAttribute(\"aria-hidden\");\n\n      if (!wasPresent) {\n        // Dispatch an event indicating the slide is now visible\n        dispatchEvent({\n          target: slide,\n          type: \"visible\",\n          bubbles: false,\n        });\n      }\n\n      // If this slide has a state associated with it, add it\n      // onto the current state of the deck\n      let slideState = slide.getAttribute(\"data-state\");\n      if (slideState) {\n        state = state.concat(slideState.split(\" \"));\n      }\n    } else {\n      // Since there are no slides we can't be anywhere beyond the\n      // zeroth index\n      index = 0;\n    }\n\n    return index;\n  }\n\n  /**\n   * Shows all fragment elements within the given contaienr.\n   */\n  function showFragmentsIn(container) {\n    Util.queryAll(container, \".fragment\").forEach((fragment) => {\n      fragment.classList.add(\"visible\");\n      fragment.classList.remove(\"current-fragment\");\n    });\n  }\n\n  /**\n   * Hides all fragment elements within the given contaienr.\n   */\n  function hideFragmentsIn(container) {\n    Util.queryAll(container, \".fragment.visible\").forEach((fragment) => {\n      fragment.classList.remove(\"visible\", \"current-fragment\");\n    });\n  }\n\n  /**\n   * Optimization method; hide all slides that are far away\n   * from the present slide.\n   */\n  function updateSlidesVisibility() {\n    // Select all slides and convert the NodeList result to\n    // an array\n    let horizontalSlides = getHorizontalSlides(),\n      horizontalSlidesLength = horizontalSlides.length,\n      distanceX,\n      distanceY;\n\n    if (horizontalSlidesLength && typeof indexh !== \"undefined\") {\n      // The number of steps away from the present slide that will\n      // be visible\n      let viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n      // Shorten the view distance on devices that typically have\n      // less resources\n      if (Device.isMobile) {\n        viewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n      }\n\n      // All slides need to be visible when exporting to PDF\n      if (print.isPrintingPDF()) {\n        viewDistance = Number.MAX_VALUE;\n      }\n\n      for (let x = 0; x < horizontalSlidesLength; x++) {\n        let horizontalSlide = horizontalSlides[x];\n\n        let verticalSlides = Util.queryAll(horizontalSlide, \"section\"),\n          verticalSlidesLength = verticalSlides.length;\n\n        // Determine how far away this slide is from the present\n        distanceX = Math.abs((indexh || 0) - x) || 0;\n\n        // If the presentation is looped, distance should measure\n        // 1 between the first and last slides\n        if (config.loop) {\n          distanceX =\n            Math.abs(\n              ((indexh || 0) - x) % (horizontalSlidesLength - viewDistance)\n            ) || 0;\n        }\n\n        // Show the horizontal slide if it's within the view distance\n        if (distanceX < viewDistance) {\n          slideContent.load(horizontalSlide);\n        } else {\n          slideContent.unload(horizontalSlide);\n        }\n\n        if (verticalSlidesLength) {\n          let oy = getPreviousVerticalIndex(horizontalSlide);\n\n          for (let y = 0; y < verticalSlidesLength; y++) {\n            let verticalSlide = verticalSlides[y];\n\n            distanceY =\n              x === (indexh || 0)\n                ? Math.abs((indexv || 0) - y)\n                : Math.abs(y - oy);\n\n            if (distanceX + distanceY < viewDistance) {\n              slideContent.load(verticalSlide);\n            } else {\n              slideContent.unload(verticalSlide);\n            }\n          }\n        }\n      }\n\n      // Flag if there are ANY vertical slides, anywhere in the deck\n      if (hasVerticalSlides()) {\n        dom.wrapper.classList.add(\"has-vertical-slides\");\n      } else {\n        dom.wrapper.classList.remove(\"has-vertical-slides\");\n      }\n\n      // Flag if there are ANY horizontal slides, anywhere in the deck\n      if (hasHorizontalSlides()) {\n        dom.wrapper.classList.add(\"has-horizontal-slides\");\n      } else {\n        dom.wrapper.classList.remove(\"has-horizontal-slides\");\n      }\n    }\n  }\n\n  /**\n   * Determine what available routes there are for navigation.\n   *\n   * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n   */\n  function availableRoutes({ includeFragments = false } = {}) {\n    let horizontalSlides = dom.wrapper.querySelectorAll(\n        HORIZONTAL_SLIDES_SELECTOR\n      ),\n      verticalSlides = dom.wrapper.querySelectorAll(VERTICAL_SLIDES_SELECTOR);\n\n    let routes = {\n      left: indexh > 0,\n      right: indexh < horizontalSlides.length - 1,\n      up: indexv > 0,\n      down: indexv < verticalSlides.length - 1,\n    };\n\n    // Looped presentations can always be navigated as long as\n    // there are slides available\n    if (config.loop) {\n      if (horizontalSlides.length > 1) {\n        routes.left = true;\n        routes.right = true;\n      }\n\n      if (verticalSlides.length > 1) {\n        routes.up = true;\n        routes.down = true;\n      }\n    }\n\n    if (horizontalSlides.length > 1 && config.navigationMode === \"linear\") {\n      routes.right = routes.right || routes.down;\n      routes.left = routes.left || routes.up;\n    }\n\n    // If includeFragments is set, a route will be considered\n    // availalbe if either a slid OR fragment is available in\n    // the given direction\n    if (includeFragments === true) {\n      let fragmentRoutes = fragments.availableRoutes();\n      routes.left = routes.left || fragmentRoutes.prev;\n      routes.up = routes.up || fragmentRoutes.prev;\n      routes.down = routes.down || fragmentRoutes.next;\n      routes.right = routes.right || fragmentRoutes.next;\n    }\n\n    // Reverse horizontal controls for rtl\n    if (config.rtl) {\n      let left = routes.left;\n      routes.left = routes.right;\n      routes.right = left;\n    }\n\n    return routes;\n  }\n\n  /**\n   * Returns the number of past slides. This can be used as a global\n   * flattened index for slides.\n   *\n   * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n   *\n   * @return {number} Past slide count\n   */\n  function getSlidePastCount(slide = currentSlide) {\n    let horizontalSlides = getHorizontalSlides();\n\n    // The number of past slides\n    let pastCount = 0;\n\n    // Step through all slides and count the past ones\n    mainLoop: for (let i = 0; i < horizontalSlides.length; i++) {\n      let horizontalSlide = horizontalSlides[i];\n      let verticalSlides = horizontalSlide.querySelectorAll(\"section\");\n\n      for (let j = 0; j < verticalSlides.length; j++) {\n        // Stop as soon as we arrive at the present\n        if (verticalSlides[j] === slide) {\n          break mainLoop;\n        }\n\n        // Don't count slides with the \"uncounted\" class\n        if (verticalSlides[j].dataset.visibility !== \"uncounted\") {\n          pastCount++;\n        }\n      }\n\n      // Stop as soon as we arrive at the present\n      if (horizontalSlide === slide) {\n        break;\n      }\n\n      // Don't count the wrapping section for vertical slides and\n      // slides marked as uncounted\n      if (\n        horizontalSlide.classList.contains(\"stack\") === false &&\n        horizontalSlide.dataset.visibility !== \"uncounted\"\n      ) {\n        pastCount++;\n      }\n    }\n\n    return pastCount;\n  }\n\n  /**\n   * Returns a value ranging from 0-1 that represents\n   * how far into the presentation we have navigated.\n   *\n   * @return {number}\n   */\n  function getProgress() {\n    // The number of past and total slides\n    let totalCount = getTotalSlides();\n    let pastCount = getSlidePastCount();\n\n    if (currentSlide) {\n      let allFragments = currentSlide.querySelectorAll(\".fragment\");\n\n      // If there are fragments in the current slide those should be\n      // accounted for in the progress.\n      if (allFragments.length > 0) {\n        let visibleFragments =\n          currentSlide.querySelectorAll(\".fragment.visible\");\n\n        // This value represents how big a portion of the slide progress\n        // that is made up by its fragments (0-1)\n        let fragmentWeight = 0.9;\n\n        // Add fragment progress to the past slide count\n        pastCount +=\n          (visibleFragments.length / allFragments.length) * fragmentWeight;\n      }\n    }\n\n    return Math.min(pastCount / (totalCount - 1), 1);\n  }\n\n  /**\n   * Retrieves the h/v location and fragment of the current,\n   * or specified, slide.\n   *\n   * @param {HTMLElement} [slide] If specified, the returned\n   * index will be for this slide rather than the currently\n   * active one\n   *\n   * @return {{h: number, v: number, f: number}}\n   */\n  function getIndices(slide) {\n    // By default, return the current indices\n    let h = indexh,\n      v = indexv,\n      f;\n\n    // If a slide is specified, return the indices of that slide\n    if (slide) {\n      let isVertical = isVerticalSlide(slide);\n      let slideh = isVertical ? slide.parentNode : slide;\n\n      // Select all horizontal slides\n      let horizontalSlides = getHorizontalSlides();\n\n      // Now that we know which the horizontal slide is, get its index\n      h = Math.max(horizontalSlides.indexOf(slideh), 0);\n\n      // Assume we're not vertical\n      v = undefined;\n\n      // If this is a vertical slide, grab the vertical index\n      if (isVertical) {\n        v = Math.max(\n          Util.queryAll(slide.parentNode, \"section\").indexOf(slide),\n          0\n        );\n      }\n    }\n\n    if (!slide && currentSlide) {\n      let hasFragments = currentSlide.querySelectorAll(\".fragment\").length > 0;\n      if (hasFragments) {\n        let currentFragment = currentSlide.querySelector(\".current-fragment\");\n        if (\n          currentFragment &&\n          currentFragment.hasAttribute(\"data-fragment-index\")\n        ) {\n          f = parseInt(currentFragment.getAttribute(\"data-fragment-index\"), 10);\n        } else {\n          f = currentSlide.querySelectorAll(\".fragment.visible\").length - 1;\n        }\n      }\n    }\n\n    return { h, v, f };\n  }\n\n  /**\n   * Retrieves all slides in this presentation.\n   */\n  function getSlides() {\n    return Util.queryAll(\n      dom.wrapper,\n      SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])'\n    );\n  }\n\n  /**\n   * Returns a list of all horizontal slides in the deck. Each\n   * vertical stack is included as one horizontal slide in the\n   * resulting array.\n   */\n  function getHorizontalSlides() {\n    return Util.queryAll(dom.wrapper, HORIZONTAL_SLIDES_SELECTOR);\n  }\n\n  /**\n   * Returns all vertical slides that exist within this deck.\n   */\n  function getVerticalSlides() {\n    return Util.queryAll(dom.wrapper, \".slides>section>section\");\n  }\n\n  /**\n   * Returns all vertical stacks (each stack can contain multiple slides).\n   */\n  function getVerticalStacks() {\n    return Util.queryAll(dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + \".stack\");\n  }\n\n  /**\n   * Returns true if there are at least two horizontal slides.\n   */\n  function hasHorizontalSlides() {\n    return getHorizontalSlides().length > 1;\n  }\n\n  /**\n   * Returns true if there are at least two vertical slides.\n   */\n  function hasVerticalSlides() {\n    return getVerticalSlides().length > 1;\n  }\n\n  /**\n   * Returns an array of objects where each object represents the\n   * attributes on its respective slide.\n   */\n  function getSlidesAttributes() {\n    return getSlides().map((slide) => {\n      let attributes = {};\n      for (let i = 0; i < slide.attributes.length; i++) {\n        let attribute = slide.attributes[i];\n        attributes[attribute.name] = attribute.value;\n      }\n      return attributes;\n    });\n  }\n\n  /**\n   * Retrieves the total number of slides in this presentation.\n   *\n   * @return {number}\n   */\n  function getTotalSlides() {\n    return getSlides().length;\n  }\n\n  /**\n   * Returns the slide element matching the specified index.\n   *\n   * @return {HTMLElement}\n   */\n  function getSlide(x, y) {\n    let horizontalSlide = getHorizontalSlides()[x];\n    let verticalSlides =\n      horizontalSlide && horizontalSlide.querySelectorAll(\"section\");\n\n    if (verticalSlides && verticalSlides.length && typeof y === \"number\") {\n      return verticalSlides ? verticalSlides[y] : undefined;\n    }\n\n    return horizontalSlide;\n  }\n\n  /**\n   * Returns the background element for the given slide.\n   * All slides, even the ones with no background properties\n   * defined, have a background element so as long as the\n   * index is valid an element will be returned.\n   *\n   * @param {mixed} x Horizontal background index OR a slide\n   * HTML element\n   * @param {number} y Vertical background index\n   * @return {(HTMLElement[]|*)}\n   */\n  function getSlideBackground(x, y) {\n    let slide = typeof x === \"number\" ? getSlide(x, y) : x;\n    if (slide) {\n      return slide.slideBackgroundElement;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Retrieves the current state of the presentation as\n   * an object. This state can then be restored at any\n   * time.\n   *\n   * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n   */\n  function getState() {\n    let indices = getIndices();\n\n    return {\n      indexh: indices.h,\n      indexv: indices.v,\n      indexf: indices.f,\n      paused: isPaused(),\n      overview: overview.isActive(),\n    };\n  }\n\n  /**\n   * Restores the presentation to the given state.\n   *\n   * @param {object} state As generated by getState()\n   * @see {@link getState} generates the parameter `state`\n   */\n  function setState(state) {\n    if (typeof state === \"object\") {\n      slide(\n        Util.deserialize(state.indexh),\n        Util.deserialize(state.indexv),\n        Util.deserialize(state.indexf)\n      );\n\n      let pausedFlag = Util.deserialize(state.paused),\n        overviewFlag = Util.deserialize(state.overview);\n\n      if (typeof pausedFlag === \"boolean\" && pausedFlag !== isPaused()) {\n        togglePause(pausedFlag);\n      }\n\n      if (\n        typeof overviewFlag === \"boolean\" &&\n        overviewFlag !== overview.isActive()\n      ) {\n        overview.toggle(overviewFlag);\n      }\n    }\n  }\n\n  /**\n   * Cues a new automated slide if enabled in the config.\n   */\n  function cueAutoSlide() {\n    cancelAutoSlide();\n\n    if (currentSlide && config.autoSlide !== false) {\n      let fragment = currentSlide.querySelector(\".current-fragment\");\n\n      // When the slide first appears there is no \"current\" fragment so\n      // we look for a data-autoslide timing on the first fragment\n      if (!fragment) fragment = currentSlide.querySelector(\".fragment\");\n\n      let fragmentAutoSlide = fragment\n        ? fragment.getAttribute(\"data-autoslide\")\n        : null;\n      let parentAutoSlide = currentSlide.parentNode\n        ? currentSlide.parentNode.getAttribute(\"data-autoslide\")\n        : null;\n      let slideAutoSlide = currentSlide.getAttribute(\"data-autoslide\");\n\n      // Pick value in the following priority order:\n      // 1. Current fragment's data-autoslide\n      // 2. Current slide's data-autoslide\n      // 3. Parent slide's data-autoslide\n      // 4. Global autoSlide setting\n      if (fragmentAutoSlide) {\n        autoSlide = parseInt(fragmentAutoSlide, 10);\n      } else if (slideAutoSlide) {\n        autoSlide = parseInt(slideAutoSlide, 10);\n      } else if (parentAutoSlide) {\n        autoSlide = parseInt(parentAutoSlide, 10);\n      } else {\n        autoSlide = config.autoSlide;\n\n        // If there are media elements with data-autoplay,\n        // automatically set the autoSlide duration to the\n        // length of that media. Not applicable if the slide\n        // is divided up into fragments.\n        // playbackRate is accounted for in the duration.\n        if (currentSlide.querySelectorAll(\".fragment\").length === 0) {\n          Util.queryAll(currentSlide, \"video, audio\").forEach((el) => {\n            if (el.hasAttribute(\"data-autoplay\")) {\n              if (\n                autoSlide &&\n                (el.duration * 1000) / el.playbackRate > autoSlide\n              ) {\n                autoSlide = (el.duration * 1000) / el.playbackRate + 1000;\n              }\n            }\n          });\n        }\n      }\n\n      // Cue the next auto-slide if:\n      // - There is an autoSlide value\n      // - Auto-sliding isn't paused by the user\n      // - The presentation isn't paused\n      // - The overview isn't active\n      // - The presentation isn't over\n      if (\n        autoSlide &&\n        !autoSlidePaused &&\n        !isPaused() &&\n        !overview.isActive() &&\n        (!isLastSlide() ||\n          fragments.availableRoutes().next ||\n          config.loop === true)\n      ) {\n        autoSlideTimeout = setTimeout(() => {\n          if (typeof config.autoSlideMethod === \"function\") {\n            config.autoSlideMethod();\n          } else {\n            navigateNext();\n          }\n          cueAutoSlide();\n        }, autoSlide);\n        autoSlideStartTime = Date.now();\n      }\n\n      if (autoSlidePlayer) {\n        autoSlidePlayer.setPlaying(autoSlideTimeout !== -1);\n      }\n    }\n  }\n\n  /**\n   * Cancels any ongoing request to auto-slide.\n   */\n  function cancelAutoSlide() {\n    clearTimeout(autoSlideTimeout);\n    autoSlideTimeout = -1;\n  }\n\n  function pauseAutoSlide() {\n    if (autoSlide && !autoSlidePaused) {\n      autoSlidePaused = true;\n      dispatchEvent({ type: \"autoslidepaused\" });\n      clearTimeout(autoSlideTimeout);\n\n      if (autoSlidePlayer) {\n        autoSlidePlayer.setPlaying(false);\n      }\n    }\n  }\n\n  function resumeAutoSlide() {\n    if (autoSlide && autoSlidePaused) {\n      autoSlidePaused = false;\n      dispatchEvent({ type: \"autoslideresumed\" });\n      cueAutoSlide();\n    }\n  }\n\n  function navigateLeft({ skipFragments = false } = {}) {\n    navigationHistory.hasNavigatedHorizontally = true;\n\n    // Reverse for RTL\n    if (config.rtl) {\n      if (\n        (overview.isActive() || skipFragments || fragments.next() === false) &&\n        availableRoutes().left\n      ) {\n        slide(\n          indexh + 1,\n          config.navigationMode === \"grid\" ? indexv : undefined\n        );\n      }\n    }\n    // Normal navigation\n    else if (\n      (overview.isActive() || skipFragments || fragments.prev() === false) &&\n      availableRoutes().left\n    ) {\n      slide(indexh - 1, config.navigationMode === \"grid\" ? indexv : undefined);\n    }\n  }\n\n  function navigateRight({ skipFragments = false } = {}) {\n    navigationHistory.hasNavigatedHorizontally = true;\n\n    // Reverse for RTL\n    if (config.rtl) {\n      if (\n        (overview.isActive() || skipFragments || fragments.prev() === false) &&\n        availableRoutes().right\n      ) {\n        slide(\n          indexh - 1,\n          config.navigationMode === \"grid\" ? indexv : undefined\n        );\n      }\n    }\n    // Normal navigation\n    else if (\n      (overview.isActive() || skipFragments || fragments.next() === false) &&\n      availableRoutes().right\n    ) {\n      slide(indexh + 1, config.navigationMode === \"grid\" ? indexv : undefined);\n    }\n  }\n\n  function navigateUp({ skipFragments = false } = {}) {\n    // Prioritize hiding fragments\n    if (\n      (overview.isActive() || skipFragments || fragments.prev() === false) &&\n      availableRoutes().up\n    ) {\n      slide(indexh, indexv - 1);\n    }\n  }\n\n  function navigateDown({ skipFragments = false } = {}) {\n    navigationHistory.hasNavigatedVertically = true;\n\n    // Prioritize revealing fragments\n    if (\n      (overview.isActive() || skipFragments || fragments.next() === false) &&\n      availableRoutes().down\n    ) {\n      slide(indexh, indexv + 1);\n    }\n  }\n\n  /**\n   * Navigates backwards, prioritized in the following order:\n   * 1) Previous fragment\n   * 2) Previous vertical slide\n   * 3) Previous horizontal slide\n   */\n  function navigatePrev({ skipFragments = false } = {}) {\n    // Prioritize revealing fragments\n    if (skipFragments || fragments.prev() === false) {\n      if (availableRoutes().up) {\n        navigateUp({ skipFragments });\n      } else {\n        // Fetch the previous horizontal slide, if there is one\n        let previousSlide;\n\n        if (config.rtl) {\n          previousSlide = Util.queryAll(\n            dom.wrapper,\n            HORIZONTAL_SLIDES_SELECTOR + \".future\"\n          ).pop();\n        } else {\n          previousSlide = Util.queryAll(\n            dom.wrapper,\n            HORIZONTAL_SLIDES_SELECTOR + \".past\"\n          ).pop();\n        }\n\n        // When going backwards and arriving on a stack we start\n        // at the bottom of the stack\n        if (previousSlide && previousSlide.classList.contains(\"stack\")) {\n          let v =\n            previousSlide.querySelectorAll(\"section\").length - 1 || undefined;\n          let h = indexh - 1;\n          slide(h, v);\n        } else {\n          navigateLeft({ skipFragments });\n        }\n      }\n    }\n  }\n\n  /**\n   * The reverse of #navigatePrev().\n   */\n  function navigateNext({ skipFragments = false } = {}) {\n    navigationHistory.hasNavigatedHorizontally = true;\n    navigationHistory.hasNavigatedVertically = true;\n\n    // Prioritize revealing fragments\n    if (skipFragments || fragments.next() === false) {\n      let routes = availableRoutes();\n\n      // When looping is enabled `routes.down` is always available\n      // so we need a separate check for when we've reached the\n      // end of a stack and should move horizontally\n      if (routes.down && routes.right && config.loop && isLastVerticalSlide()) {\n        routes.down = false;\n      }\n\n      if (routes.down) {\n        navigateDown({ skipFragments });\n      } else if (config.rtl) {\n        navigateLeft({ skipFragments });\n      } else {\n        navigateRight({ skipFragments });\n      }\n    }\n  }\n\n  // --------------------------------------------------------------------//\n  // ----------------------------- EVENTS -------------------------------//\n  // --------------------------------------------------------------------//\n\n  /**\n   * Called by all event handlers that are based on user\n   * input.\n   *\n   * @param {object} [event]\n   */\n  function onUserInput(event) {\n    if (config.autoSlideStoppable) {\n      pauseAutoSlide();\n    }\n  }\n\n  /**\n   * Listener for post message events posted to this window.\n   */\n  function onPostMessage(event) {\n    let data = event.data;\n\n    // Make sure we're dealing with JSON\n    if (\n      typeof data === \"string\" &&\n      data.charAt(0) === \"{\" &&\n      data.charAt(data.length - 1) === \"}\"\n    ) {\n      data = JSON.parse(data);\n\n      // Check if the requested method can be found\n      if (data.method && typeof Reveal[data.method] === \"function\") {\n        if (POST_MESSAGE_METHOD_BLACKLIST.test(data.method) === false) {\n          const result = Reveal[data.method].apply(Reveal, data.args);\n\n          // Dispatch a postMessage event with the returned value from\n          // our method invocation for getter functions\n          dispatchPostMessage(\"callback\", {\n            method: data.method,\n            result: result,\n          });\n        } else {\n          console.warn(\n            'reveal.js: \"' +\n              data.method +\n              '\" is is blacklisted from the postMessage API'\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Event listener for transition end on the current slide.\n   *\n   * @param {object} [event]\n   */\n  function onTransitionEnd(event) {\n    if (transition === \"running\" && /section/gi.test(event.target.nodeName)) {\n      transition = \"idle\";\n      dispatchEvent({\n        type: \"slidetransitionend\",\n        data: { indexh, indexv, previousSlide, currentSlide },\n      });\n    }\n  }\n\n  /**\n   * A global listener for all click events inside of the\n   * .slides container.\n   *\n   * @param {object} [event]\n   */\n  function onSlidesClicked(event) {\n    const anchor = Util.closest(event.target, 'a[href^=\"#\"]');\n\n    // If a hash link is clicked, we find the target slide\n    // and navigate to it. We previously relied on 'hashchange'\n    // for links like these but that prevented media with\n    // audio tracks from playing in mobile browsers since it\n    // wasn't considered a direct interaction with the document.\n    if (anchor) {\n      const hash = anchor.getAttribute(\"href\");\n      const indices = location.getIndicesFromHash(hash);\n\n      if (indices) {\n        Reveal.slide(indices.h, indices.v, indices.f);\n        event.preventDefault();\n      }\n    }\n  }\n\n  /**\n   * Handler for the window level 'resize' event.\n   *\n   * @param {object} [event]\n   */\n  function onWindowResize(event) {\n    layout();\n  }\n\n  /**\n   * Handle for the window level 'visibilitychange' event.\n   *\n   * @param {object} [event]\n   */\n  function onPageVisibilityChange(event) {\n    // If, after clicking a link or similar and we're coming back,\n    // focus the document.body to ensure we can use keyboard shortcuts\n    if (document.hidden === false && document.activeElement !== document.body) {\n      // Not all elements support .blur() - SVGs among them.\n      if (typeof document.activeElement.blur === \"function\") {\n        document.activeElement.blur();\n      }\n      document.body.focus();\n    }\n  }\n\n  /**\n   * Handler for the document level 'fullscreenchange' event.\n   *\n   * @param {object} [event]\n   */\n  function onFullscreenChange(event) {\n    let element =\n      document.fullscreenElement || document.webkitFullscreenElement;\n    if (element === dom.wrapper) {\n      event.stopImmediatePropagation();\n\n      // Timeout to avoid layout shift in Safari\n      setTimeout(() => {\n        Reveal.layout();\n        Reveal.focus.focus(); // focus.focus :'(\n      }, 1);\n    }\n  }\n\n  /**\n   * Handles clicks on links that are set to preview in the\n   * iframe overlay.\n   *\n   * @param {object} event\n   */\n  function onPreviewLinkClicked(event) {\n    if (event.currentTarget && event.currentTarget.hasAttribute(\"href\")) {\n      let url = event.currentTarget.getAttribute(\"href\");\n      if (url) {\n        showPreview(url);\n        event.preventDefault();\n      }\n    }\n  }\n\n  /**\n   * Handles click on the auto-sliding controls element.\n   *\n   * @param {object} [event]\n   */\n  function onAutoSlidePlayerClick(event) {\n    // Replay\n    if (isLastSlide() && config.loop === false) {\n      slide(0, 0);\n      resumeAutoSlide();\n    }\n    // Resume\n    else if (autoSlidePaused) {\n      resumeAutoSlide();\n    }\n    // Pause\n    else {\n      pauseAutoSlide();\n    }\n  }\n\n  // --------------------------------------------------------------------//\n  // ------------------------------- API --------------------------------//\n  // --------------------------------------------------------------------//\n\n  // The public reveal.js API\n  const API = {\n    VERSION,\n\n    initialize,\n    configure,\n    destroy,\n\n    sync,\n    syncSlide,\n    syncFragments: fragments.sync.bind(fragments),\n\n    // Navigation methods\n    slide,\n    left: navigateLeft,\n    right: navigateRight,\n    up: navigateUp,\n    down: navigateDown,\n    prev: navigatePrev,\n    next: navigateNext,\n\n    // Navigation aliases\n    navigateLeft,\n    navigateRight,\n    navigateUp,\n    navigateDown,\n    navigatePrev,\n    navigateNext,\n\n    // Fragment methods\n    navigateFragment: fragments.goto.bind(fragments),\n    prevFragment: fragments.prev.bind(fragments),\n    nextFragment: fragments.next.bind(fragments),\n\n    // Event binding\n    on,\n    off,\n\n    // Legacy event binding methods left in for backwards compatibility\n    addEventListener: on,\n    removeEventListener: off,\n\n    // Forces an update in slide layout\n    layout,\n\n    // Randomizes the order of slides\n    shuffle,\n\n    // Returns an object with the available routes as booleans (left/right/top/bottom)\n    availableRoutes,\n\n    // Returns an object with the available fragments as booleans (prev/next)\n    availableFragments: fragments.availableRoutes.bind(fragments),\n\n    // Toggles a help overlay with keyboard shortcuts\n    toggleHelp,\n\n    // Toggles the overview mode on/off\n    toggleOverview: overview.toggle.bind(overview),\n\n    // Toggles the \"black screen\" mode on/off\n    togglePause,\n\n    // Toggles the auto slide mode on/off\n    toggleAutoSlide,\n\n    // Slide navigation checks\n    isFirstSlide,\n    isLastSlide,\n    isLastVerticalSlide,\n    isVerticalSlide,\n\n    // State checks\n    isPaused,\n    isAutoSliding,\n    isSpeakerNotes: notes.isSpeakerNotesWindow.bind(notes),\n    isOverview: overview.isActive.bind(overview),\n    isFocused: focus.isFocused.bind(focus),\n    isPrintingPDF: print.isPrintingPDF.bind(print),\n\n    // Checks if reveal.js has been loaded and is ready for use\n    isReady: () => ready,\n\n    // Slide preloading\n    loadSlide: slideContent.load.bind(slideContent),\n    unloadSlide: slideContent.unload.bind(slideContent),\n\n    // Preview management\n    showPreview,\n    hidePreview: closeOverlay,\n\n    // Adds or removes all internal event listeners\n    addEventListeners,\n    removeEventListeners,\n    dispatchEvent,\n\n    // Facility for persisting and restoring the presentation state\n    getState,\n    setState,\n\n    // Presentation progress on range of 0-1\n    getProgress,\n\n    // Returns the indices of the current, or specified, slide\n    getIndices,\n\n    // Returns an Array of key:value maps of the attributes of each\n    // slide in the deck\n    getSlidesAttributes,\n\n    // Returns the number of slides that we have passed\n    getSlidePastCount,\n\n    // Returns the total number of slides\n    getTotalSlides,\n\n    // Returns the slide element at the specified index\n    getSlide,\n\n    // Returns the previous slide element, may be null\n    getPreviousSlide: () => previousSlide,\n\n    // Returns the current slide element\n    getCurrentSlide: () => currentSlide,\n\n    // Returns the slide background element at the specified index\n    getSlideBackground,\n\n    // Returns the speaker notes string for a slide, or null\n    getSlideNotes: notes.getSlideNotes.bind(notes),\n\n    // Returns an Array of all slides\n    getSlides,\n\n    // Returns an array with all horizontal/vertical slides in the deck\n    getHorizontalSlides,\n    getVerticalSlides,\n\n    // Checks if the presentation contains two or more horizontal\n    // and vertical slides\n    hasHorizontalSlides,\n    hasVerticalSlides,\n\n    // Checks if the deck has navigated on either axis at least once\n    hasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n    hasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n    // Adds/removes a custom key binding\n    addKeyBinding: keyboard.addKeyBinding.bind(keyboard),\n    removeKeyBinding: keyboard.removeKeyBinding.bind(keyboard),\n\n    // Programmatically triggers a keyboard event\n    triggerKey: keyboard.triggerKey.bind(keyboard),\n\n    // Registers a new shortcut to include in the help overlay\n    registerKeyboardShortcut: keyboard.registerKeyboardShortcut.bind(keyboard),\n\n    getComputedSlideSize,\n\n    // Returns the current scale of the presentation content\n    getScale: () => scale,\n\n    // Returns the current configuration object\n    getConfig: () => config,\n\n    // Helper method, retrieves query string as a key:value map\n    getQueryHash: Util.getQueryHash,\n\n    // Returns the path to the current slide as represented in the URL\n    getSlidePath: location.getHash.bind(location),\n\n    // Returns reveal.js DOM elements\n    getRevealElement: () => revealElement,\n    getSlidesElement: () => dom.slides,\n    getViewportElement: () => dom.viewport,\n    getBackgroundsElement: () => backgrounds.element,\n\n    // API for registering and retrieving plugins\n    registerPlugin: plugins.registerPlugin.bind(plugins),\n    hasPlugin: plugins.hasPlugin.bind(plugins),\n    getPlugin: plugins.getPlugin.bind(plugins),\n    getPlugins: plugins.getRegisteredPlugins.bind(plugins),\n  };\n\n  // Our internal API which controllers have access to\n  Util.extend(Reveal, {\n    ...API,\n\n    // Methods for announcing content to screen readers\n    announceStatus,\n    getStatusText,\n\n    // Controllers\n    print,\n    focus,\n    progress,\n    controls,\n    location,\n    overview,\n    fragments,\n    slideContent,\n    slideNumber,\n\n    onUserInput,\n    closeOverlay,\n    updateSlidesVisibility,\n    layoutSlideContents,\n    transformSlides,\n    cueAutoSlide,\n    cancelAutoSlide,\n  });\n\n  return API;\n}\n","import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],"names":["extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","createSingletonNode","container","tagname","classname","innerHTML","nodes","length","testNode","node","document","createElement","appendChild","createStyleSheet","tag","type","styleSheet","cssText","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","getRemainingHeight","height","newHeight","oldHeight","offsetHeight","removeProperty","fileExtensionToMimeMap","mp4","m4a","ogv","mpeg","webm","UA","navigator","userAgent","isMobile","test","platform","maxTouchPoints","isAndroid","e","t","slice","o","l","u","cancelAnimationFrame","requestAnimationFrame","s","filter","dirty","active","c","forEach","styleComputed","m","y","v","p","d","f","S","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","n","getComputedStyle","getPropertyValue","display","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","h","w","observeMutations","observer","disconnect","originalStyle","z","F","MutationObserver","observe","g","subtree","childList","characterData","W","E","clearTimeout","setTimeout","x","observeWindowDelay","M","Object","defineProperty","set","concat","observeWindow","fitAll","C","assign","map","newbie","push","fit","unfreeze","freeze","unsubscribe","arguments","window","SlideContent","constructor","Reveal","this","startEmbeddedIframe","bind","shouldPreload","preload","getConfig","preloadIframes","hasAttribute","load","slide","options","undefined","tagName","setAttribute","getAttribute","removeAttribute","media","sources","source","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","trim","encodeURI","join","isSpeakerNotes","video","muted","getMimeTypeFromFile","excludeIframes","iframe","width","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","scopeElement","fitty","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","addEventListener","removeEventListener","event","isAttachedToDOM","isVisible","currentTime","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintingPDF","showSlideNumber","update","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","sep","isVerticalSlide","url","getHash","formatNumber","delimiter","isNaN","destroy","colorToRgb","color","hex3","r","parseInt","charAt","hex6","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","contentElement","sync","data","backgroundColor","backgroundGradient","backgroundTransition","backgroundOpacity","dataPreload","opacity","contrastColor","computedBackgroundStyle","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","previousBackground","slideContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","classToBubble","contains","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","verticalSlideCount","parallaxBackgroundVertical","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","VERTICAL_SLIDES_SELECTOR","POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","getSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","fromSlideIsHidden","css","getAutoAnimatableElements","elements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","delay","autoAnimateTarget","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","nodeName","innerText","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","key","fromElement","pimaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","Fragments","fragments","disable","enable","availableRoutes","hiddenFragments","prev","next","sort","grouped","ordered","unordered","sorted","fragment","group","sortAll","horizontalSlide","verticalSlide","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","progress","fragmentInURL","writeURL","Overview","onSlideClicked","activate","overview","isActive","cancelAutoSlide","getBackgroundsElement","margin","slideSize","getComputedSlideSize","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","indexh","indexv","hslide","vslide","hbackground","vbackground","vmin","innerWidth","innerHeight","transformSlides","deactivate","cueAutoSlide","toggle","override","preventDefault","Keyboard","shortcuts","bindings","onDocumentKeyDown","onDocumentKeyPress","navigationMode","unbind","addKeyBinding","binding","callback","keyCode","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","shiftKey","charCode","toggleHelp","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","skipFragments","left","right","up","Number","MAX_VALUE","down","togglePause","requestMethod","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","enterFullscreen","embedded","getViewportElement","autoSlideStoppable","toggleAutoSlide","closeOverlay","Location","MAX_REPLACE_STATE_FREQUENCY","writeURLTimeout","replaceStateTimestamp","onWindowHashChange","getIndicesFromHash","name","hash","bits","hashIndexBase","hashOneBasedIndex","getElementById","decodeURIComponent","error","readURL","currentIndices","newIndices","history","debouncedReplaceState","pathname","replaceState","Date","now","replaceStateTimeout","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slides","slidesTotal","slideIndex","floor","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","insertBefore","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","Promise","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","init","hasPlugin","getPlugin","getRegisteredPlugins","Print","injectPageNumbers","pageWidth","pageHeight","body","viewportElement","presentationBackground","viewportStyles","layoutSlideContents","slideScrollHeights","scrollHeight","pages","pageContainer","top","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","page","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","fragmentGroups","previousFragmentStep","clonedPage","cloneNode","fragmentNumber","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","clientY","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","STATE_FOCUS","STATE_BLUR","Focus","onRevealPointerDown","onDocumentPointerDown","blur","focus","Notes","print","updateVisibility","hasNotes","isSpeakerNotesWindow","notesElements","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","defaultConfig","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","POSITIVE_INFINITY","viewDistance","mobileViewDistance","VERSION","Deck","previousSlide","autoSlidePlayer","ready","navigationHistory","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","backgrounds","pointer","initialize","initOptions","wrapper","Util","setViewport","start","viewport","removeHiddenSlides","setupDOM","setupPostMessage","setupScrollPrevention","setupFullscreen","resetVerticalSlides","removeEventListeners","setupPDF","Device","pauseOverlay","statusElement","createStatusElement","position","overflow","clip","text","nodeType","isAriaHidden","isDisplayHidden","child","setInterval","scrollTop","scrollLeft","onFullscreenChange","onPostMessage","isReady","numberOfSlides","setProperty","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onSlidesClicked","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","_ref","createEvent","initEvent","dispatchPostMessage","parent","self","message","namespace","getState","JSON","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","size","oldScale","presentationWidth","presentationHeight","zoom","len","remainingHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","stack","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","resumeAutoSlide","pauseAutoSlide","origin","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","getVerticalStacks","stateLoop","j","splice","syncSlide","beforeSlide","random","slidesLength","printMode","loopedForwards","loopedBackwards","reverse","showFragmentsIn","hideFragmentsIn","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","totalCount","allFragments","fragmentWeight","isVertical","getSlidesAttributes","attributes","attribute","getSlide","indexf","paused","setState","pausedFlag","overviewFlag","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","parse","method","args","anchor","fullscreenElement","webkitFullscreenElement","stopImmediatePropagation","currentTarget","API","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","isOverview","loadSlide","unloadSlide","hidePreview","getPreviousSlide","getSlidePath","getPlugins","enqueuedAPICalls","_len","_key","deck"],"mappings":"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"}